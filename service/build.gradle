/*
 *  Copyright (c) 2020, Michael Leitz
 *  <p/>
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *  <p/>
 *  http://www.apache.org/licenses/LICENSE-2.0
 *  <p/>
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

// Build docker file with jib: gradle jibDockerBuild
// Saving to Nexus here: https://github.com/GoogleContainerTools/jib/issues/531
// Saving to Nexus here: https://github.com/GoogleContainerTools/jib/issues/539

plugins {
    id 'java'
    id 'idea'
    id 'com.google.cloud.tools.jib' version '1.7.0'
    id "io.freefair.lombok" version "4.1.6"
    id 'org.springframework.boot' version '2.1.7.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.8'
    id 'jacoco'
}

group = 'com.mikeleitz'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

jib {
    to {
        image = 'mikeleitz/sidescript-service'
        credHelper = 'osxkeychain'
    }
    from {
        // image = 'gcr.io/distroless/java:11-debug' // Use debug image so it includes shell access.
        image = 'gcr.io/distroless/java:11'
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.antlr:ST4:4.1'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.9.9'
    implementation 'org.json:json:20190722'
    implementation 'commons-io:commons-io:2.6'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'com.github.marschall:memoryfilesystem:2.1.0'
    implementation 'org.apache.commons:commons-text:1.8'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

// Configure IntelliJ.
idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}
